input {
    # 从文件读取日志信息 输送到控制台
    #file {
    #    path => "D:/ELK/log_dns/*/*/*/*.info.log"
    #    codec => "json" ## 以JSON格式读取日志
    #    type => "dns_info"
    #    start_position => "beginning"
    #}
	
	#file {
    #    path => "D:/ELK/log_dns/*/*/*/*.error.log"
    #    codec => "json" ## 以JSON格式读取日志
    #    type => "dns_error"
    #    start_position => "beginning"
    #}
	
	# 从网络接收日志  开启端口为 5001 如果修改的话也需要在 dns服务端修改日志发送端口
	tcp {
		port => 5001
		# codec => "json"
		codec => plain {
			charset => "UTF-8"
		}
	}
	
}

filter {

	# 以下注释的配置 是在配置本地文件日志解析时使用
	#if [type] == "dns_info" {
	#	grok {
	#		match => { "message" => "%{DATA:timestamp} - %{LOGLEVEL:loglevel}: %{IP:clientIp} (?<annalyzeInfo>.*) %{DATA:domain} (?<annalyzeResult>.*) %{IP:domainIp}"}
	#	}
	#} 
	#if [type] == "dns_error" {
	#	grok {
	#		match => { "message" => "%{DATA:timestamp} - %{LOGLEVEL:loglevel}: %{IP:clientIp} (?<annalyzeInfo>.*) %{DATA:domain} (?<annalyzeResult>.*)"}
	#	}
	#}
	
	if "ERROR" in [message] {
		grok {
			match => { "message" => "%{DATA:timestamp} - %{LOGLEVEL:loglevel}: %{IP:clientIp} (?<annalyzeInfo>.*) %{DATA:domain} (?<annalyzeResult>.*)"}
		}
	} else if "INFO" in [message] {
		grok {
			match => { "message" => "%{DATA:timestamp} - %{LOGLEVEL:loglevel}: %{IP:clientIp} (?<annalyzeInfo>.*) %{DATA:domain} (?<annalyzeResult>.*) %{IP:domainIp}"}
		}
	}

	
	
	date {
		match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
		locale => "cn"
	}
	
	date {
		match => ["@timestamp", "ISO8601"]
		target => "@timestamp"
		timezone => "Asia/Shanghai"
	}
}

output {
	# stdout { codec => rubydebug }
	
	# 以下注释的配置 是在配置本地文件日志解析时使用
	#if [type] == "dns_info" {
	#	stdout { codec => rubydebug }
	#	elasticsearch {
	#		hosts => ["127.0.0.1:9200"]
	#		index => "dns-info-%{+YYYY.MM.dd}"
	#	}
	#} else if [type] == "dns_error" {
	#	stdout { codec => rubydebug }
	#	elasticsearch {
	#		hosts => ["127.0.0.1:9200"]
	#		index => "dns-error-%{+YYYY.MM.dd}"
	#	}
	#}
	
	
	if [loglevel] == "INFO" {
		stdout { codec => rubydebug }
		elasticsearch {
			hosts => ["127.0.0.1:9200"]
			index => "dns-info"
		}
	} else if [loglevel] == "ERROR" {
		stdout { codec => rubydebug }
		elasticsearch {
			hosts => ["127.0.0.1:9200"]
			index => "dns-error"
		}
	}
	
	
}